/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OracleSwapPair,
  OracleSwapPairInterface,
} from "../../../../contracts/core/OracleSwapPair.sol/OracleSwapPair";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600c5534801561001557600080fd5b50604080518082018252601381527f4f7261636c6553776170204c5020546f6b656e000000000000000000000000006020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f1591f550164269b1de1557406e2dd581106517f2e928d1a9f8b3b11feaa7555a818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b0319163317905561296c8061011b6000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610474578063d505accf14610487578063dd62ed3e1461049a578063fff6cae9146104c557600080fd5b8063ba9a7a5614610445578063bc25cf771461044e578063c45a01551461046157600080fd5b80637ecebe00116100d35780637ecebe00146103ae57806389afcb44146103ce57806395d89b41146103f6578063a9059cbb1461043257600080fd5b80636a6278421461037257806370a08231146103855780637464fc3d146103a557600080fd5b806323b872dd116101665780633644e515116101405780633644e51514610344578063485cc9551461034d5780635909c0d5146103605780635a3d54931461036957600080fd5b806323b872dd146102f057806330adf81f14610303578063313ce5671461032a57600080fd5b8063095ea7b311610197578063095ea7b31461028b5780630dfe1681146102ae57806318160ddd146102d957600080fd5b8063022c0d9f146101be57806306fdde03146101d35780630902f1ac14610225575b600080fd5b6101d16101cc366004612471565b6104cd565b005b61020f6040518060400160405280601381526020017f4f7261636c6553776170204c5020546f6b656e0000000000000000000000000081525081565b60405161021c919061252b565b60405180910390f35b600854604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff169082015260600161021c565b61029e61029936600461257c565b610b01565b604051901515815260200161021c565b6006546102c1906001600160a01b031681565b6040516001600160a01b03909116815260200161021c565b6102e260005481565b60405190815260200161021c565b61029e6102fe3660046125a8565b610b18565b6102e27f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610332601281565b60405160ff909116815260200161021c565b6102e260035481565b6101d161035b3660046125e9565b610bca565b6102e260095481565b6102e2600a5481565b6102e2610380366004612622565b610c6a565b6102e2610393366004612622565b60016020526000908152604090205481565b6102e2600b5481565b6102e26103bc366004612622565b60046020526000908152604090205481565b6103e16103dc366004612622565b611199565b6040805192835260208301919091520161021c565b61020f6040518060400160405280600481526020017f4f534c500000000000000000000000000000000000000000000000000000000081525081565b61029e61044036600461257c565b611578565b6102e26103e881565b6101d161045c366004612622565b611585565b6005546102c1906001600160a01b031681565b6007546102c1906001600160a01b031681565b6101d161049536600461263f565b6116e2565b6102e26104a83660046125e9565b600260209081526000928352604080842090915290825290205481565b6101d1611958565b600c546001146105245760405162461bcd60e51b815260206004820152601260248201527f4f7261636c65537761703a204c4f434b4544000000000000000000000000000060448201526064015b60405180910390fd5b6000600c55841515806105375750600084115b6105a95760405162461bcd60e51b815260206004820152602660248201527f4f7261636c65537761703a20494e53554646494349454e545f4f55545055545f60448201527f414d4f554e540000000000000000000000000000000000000000000000000000606482015260840161051b565b6000806106056008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b5091509150816dffffffffffffffffffffffffffff16871080156106385750806dffffffffffffffffffffffffffff1686105b6106aa5760405162461bcd60e51b815260206004820152602260248201527f4f7261636c65537761703a20494e53554646494349454e545f4c49515549444960448201527f5459000000000000000000000000000000000000000000000000000000000000606482015260840161051b565b60065460075460009182916001600160a01b039182169190811690891682148015906106e85750806001600160a01b0316896001600160a01b031614155b6107345760405162461bcd60e51b815260206004820152601660248201527f4f7261636c65537761703a20494e56414c49445f544f00000000000000000000604482015260640161051b565b8a1561074557610745828a8d611abe565b891561075657610756818a8c611abe565b86156107dc576040517f10d1e85c0000000000000000000000000000000000000000000000000000000081526001600160a01b038a16906310d1e85c906107a99033908f908f908e908e906004016126b6565b600060405180830381600087803b1580156107c357600080fd5b505af11580156107d7573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108449190612721565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa15801561088b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108af9190612721565b92505050600089856dffffffffffffffffffffffffffff166108d19190612769565b83116108de576000610902565b6108f88a6dffffffffffffffffffffffffffff8716612769565b6109029084612769565b905060006109208a6dffffffffffffffffffffffffffff8716612769565b831161092d576000610951565b6109478a6dffffffffffffffffffffffffffff8716612769565b6109519084612769565b905060008211806109625750600081115b6109d45760405162461bcd60e51b815260206004820152602560248201527f4f7261636c65537761703a20494e53554646494349454e545f494e5055545f4160448201527f4d4f554e54000000000000000000000000000000000000000000000000000000606482015260840161051b565b60006109f66109e4846003611c37565b6109f0876103e8611c37565b90611ca7565b90506000610a086109e4846003611c37565b9050610a34620f4240610a2e6dffffffffffffffffffffffffffff8b8116908b16611c37565b90611c37565b610a3e8383611c37565b1015610a8c5760405162461bcd60e51b815260206004820152600d60248201527f4f7261636c65537761703a204b00000000000000000000000000000000000000604482015260640161051b565b5050610a9a84848888611d05565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6000610b0e338484611fc7565b5060015b92915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14610bb5576001600160a01b0384166000908152600260209081526040808320338452909152902054610b909083611ca7565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610bc0848484612029565b5060019392505050565b6005546001600160a01b03163314610c245760405162461bcd60e51b815260206004820152601560248201527f4f7261636c65537761703a20464f5242494444454e0000000000000000000000604482015260640161051b565b600680546001600160a01b039384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560078054929093169116179055565b6000600c54600114610cbe5760405162461bcd60e51b815260206004820152601260248201527f4f7261636c65537761703a204c4f434b45440000000000000000000000000000604482015260640161051b565b6000600c819055600854600654604080516370a0823160e01b815230600482015290516dffffffffffffffffffffffffffff808516956e0100000000000000000000000000009095041693926001600160a01b0316916370a082319160248083019260209291908290030181865afa158015610d3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d629190612721565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610db0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd49190612721565b90506000610df2836dffffffffffffffffffffffffffff8716611ca7565b90506000610e10836dffffffffffffffffffffffffffff8716611ca7565b90506000610e1e87876120cf565b6000805491925081900361102e57600554604080517f7cd07e4700000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691637cd07e479160048083019260209291908290030181865afa158015610e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb3919061277c565b90506001600160a01b0381163303610faa57806001600160a01b03166340dc0e376040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190612721565b995060008a118015610f5957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8a14155b610fa55760405162461bcd60e51b815260206004820152601560248201527f4261642064657369726564206c69717569646974790000000000000000000000604482015260640161051b565b611028565b6001600160a01b038116156110015760405162461bcd60e51b815260206004820152601660248201527f4d757374206e6f742068617665206d69677261746f7200000000000000000000604482015260640161051b565b6110196103e86109f06110148888611c37565b612213565b995061102860006103e8612283565b50611083565b6110806dffffffffffffffffffffffffffff891661104c8684611c37565b61105691906127c8565b6dffffffffffffffffffffffffffff89166110718685611c37565b61107b91906127c8565b612312565b98505b600089116110f95760405162461bcd60e51b815260206004820152602960248201527f4f7261636c65537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4d494e5445440000000000000000000000000000000000000000000000606482015260840161051b565b6111038a8a612283565b61110f86868a8a611d05565b811561114b57600854611147906dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611c37565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c546001146111ee5760405162461bcd60e51b815260206004820152601260248201527f4f7261636c65537761703a204c4f434b45440000000000000000000000000000604482015260640161051b565b6000600c819055600854600654600754604080516370a0823160e01b815230600482015290516dffffffffffffffffffffffffffff808616966e01000000000000000000000000000090960416946001600160a01b0394851694909316929184916370a08231916024808201926020929091908290030181865afa15801561127a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129e9190612721565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156112e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130c9190612721565b3060009081526001602052604081205491925061132988886120cf565b6000549091508061133a8487611c37565b61134491906127c8565b9a50806113518486611c37565b61135b91906127c8565b995060008b11801561136d575060008a115b6113df5760405162461bcd60e51b815260206004820152602960248201527f4f7261636c65537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4255524e45440000000000000000000000000000000000000000000000606482015260840161051b565b6113e9308461232a565b6113f4878d8d611abe565b6113ff868d8c611abe565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa158015611443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114679190612721565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d29190612721565b93506114e085858b8b611d05565b811561151c57600854611518906dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611c37565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b6000610b0e338484612029565b600c546001146115d75760405162461bcd60e51b815260206004820152601260248201527f4f7261636c65537761703a204c4f434b45440000000000000000000000000000604482015260640161051b565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916116799184918691611674916dffffffffffffffffffffffffffff9091169084906370a08231906024015b602060405180830381865afa158015611650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f09190612721565b611abe565b6008546040516370a0823160e01b81523060048201526116d89183918691611674916e0100000000000000000000000000009091046dffffffffffffffffffffffffffff16906001600160a01b038516906370a0823190602401611633565b50506001600c5550565b428410156117325760405162461bcd60e51b815260206004820152601360248201527f4f7261636c65537761703a204558504952454400000000000000000000000000604482015260640161051b565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611785836127dc565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016118199291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156118a2573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b038116158015906118f65750886001600160a01b0316816001600160a01b0316145b6119425760405162461bcd60e51b815260206004820152601d60248201527f4f7261636c65537761703a20494e56414c49445f5349474e4154555245000000604482015260640161051b565b61194d898989611fc7565b505050505050505050565b600c546001146119aa5760405162461bcd60e51b815260206004820152601260248201527f4f7261636c65537761703a204c4f434b45440000000000000000000000000000604482015260640161051b565b6000600c556006546040516370a0823160e01b8152306004820152611ab7916001600160a01b0316906370a0823190602401602060405180830381865afa1580156119f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1d9190612721565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a899190612721565b6008546dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611d05565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611b789190612814565b6000604051808303816000865af19150503d8060008114611bb5576040519150601f19603f3d011682016040523d82523d6000602084013e611bba565b606091505b5091509150818015611be4575080511580611be4575080806020019051810190611be49190612830565b611c305760405162461bcd60e51b815260206004820152601b60248201527f4f7261636c65537761703a205452414e534645525f4641494c45440000000000604482015260640161051b565b5050505050565b6000811580611c5b57508282611c4d8183612852565b9250611c5990836127c8565b145b610b125760405162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000604482015260640161051b565b600082611cb48382612769565b9150811115610b125760405162461bcd60e51b815260206004820152601560248201527f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000604482015260640161051b565b6dffffffffffffffffffffffffffff8411801590611d3157506dffffffffffffffffffffffffffff8311155b611d7d5760405162461bcd60e51b815260206004820152601460248201527f4f7261636c65537761703a204f564552464c4f57000000000000000000000000604482015260640161051b565b6000611d8e64010000000042612869565b600854909150600090611dc7907c0100000000000000000000000000000000000000000000000000000000900463ffffffff168361287d565b905060008163ffffffff16118015611dee57506dffffffffffffffffffffffffffff841615155b8015611e0957506dffffffffffffffffffffffffffff831615155b15611ed7578063ffffffff16611e4685611e22866123b4565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16906123df565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611e6e9190612852565b60096000828254611e7f91906128a1565b909155505063ffffffff8116611e9884611e22876123b4565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611ec09190612852565b600a6000828254611ed191906128a1565b90915550505b6008805463ffffffff84167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8981166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526001602052604090205461204c9082611ca7565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461207b90826123fb565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061201c9085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612125573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612149919061277c565b600b546001600160a01b0382161580159450919250906121ff5780156121fa57600061218b6110146dffffffffffffffffffffffffffff888116908816611c37565b9050600061219883612213565b9050808211156121f75760006121ba6121b18484611ca7565b60005490611c37565b905060006121d3836121cd866005611c37565b906123fb565b905060006121e182846127c8565b905080156121f3576121f38782612283565b5050505b50505b61220b565b801561220b576000600b555b505092915050565b60006003821115612274575080600061222d6002836127c8565b6122389060016128a1565b90505b8181101561226e5790508060028161225381866127c8565b61225d91906128a1565b61226791906127c8565b905061223b565b50919050565b811561227e575060015b919050565b60005461229090826123fb565b60009081556001600160a01b0383168152600160205260409020546122b590826123fb565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906123069085815260200190565b60405180910390a35050565b60008183106123215781612323565b825b9392505050565b6001600160a01b03821660009081526001602052604090205461234d9082611ca7565b6001600160a01b038316600090815260016020526040812091909155546123749082611ca7565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612306565b6000610b126e0100000000000000000000000000006dffffffffffffffffffffffffffff84166128b4565b60006123236dffffffffffffffffffffffffffff8316846128fb565b60008261240883826128a1565b9150811015610b125760405162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000604482015260640161051b565b6001600160a01b038116811461246e57600080fd5b50565b60008060008060006080868803121561248957600080fd5b853594506020860135935060408601356124a281612459565b9250606086013567ffffffffffffffff808211156124bf57600080fd5b818801915088601f8301126124d357600080fd5b8135818111156124e257600080fd5b8960208285010111156124f457600080fd5b9699959850939650602001949392505050565b60005b8381101561252257818101518382015260200161250a565b50506000910152565b602081526000825180602084015261254a816040850160208701612507565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000806040838503121561258f57600080fd5b823561259a81612459565b946020939093013593505050565b6000806000606084860312156125bd57600080fd5b83356125c881612459565b925060208401356125d881612459565b929592945050506040919091013590565b600080604083850312156125fc57600080fd5b823561260781612459565b9150602083013561261781612459565b809150509250929050565b60006020828403121561263457600080fd5b813561232381612459565b600080600080600080600060e0888a03121561265a57600080fd5b873561266581612459565b9650602088013561267581612459565b95506040880135945060608801359350608088013560ff8116811461269957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6001600160a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b60006020828403121561273357600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610b1257610b1261273a565b60006020828403121561278e57600080fd5b815161232381612459565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826127d7576127d7612799565b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361280d5761280d61273a565b5060010190565b60008251612826818460208701612507565b9190910192915050565b60006020828403121561284257600080fd5b8151801515811461232357600080fd5b8082028115828204841417610b1257610b1261273a565b60008261287857612878612799565b500690565b63ffffffff82811682821603908082111561289a5761289a61273a565b5092915050565b80820180821115610b1257610b1261273a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8281168282168181028316929181158285048214176128f2576128f261273a565b50505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8084168061292a5761292a612799565b9216919091049291505056fea26469706673582212200d085e5ec155ae91198746074b0f8b60ac45d03e741f35adfa698a60792a150d64736f6c63430008130033";

type OracleSwapPairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleSwapPairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleSwapPair__factory extends ContractFactory {
  constructor(...args: OracleSwapPairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<OracleSwapPair> {
    return super.deploy(overrides || {}) as Promise<OracleSwapPair>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OracleSwapPair {
    return super.attach(address) as OracleSwapPair;
  }
  override connect(signer: Signer): OracleSwapPair__factory {
    return super.connect(signer) as OracleSwapPair__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleSwapPairInterface {
    return new utils.Interface(_abi) as OracleSwapPairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleSwapPair {
    return new Contract(address, _abi, signerOrProvider) as OracleSwapPair;
  }
}
