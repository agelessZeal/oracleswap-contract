/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OracleSwapRewardsManager,
  OracleSwapRewardsManagerInterface,
} from "../../contracts/OracleSwapRewardsManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wnat",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ftsoManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ftsoRewardManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_flareContractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "flareContractRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ftsoManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ftsoProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ftsoRewardManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wnat",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161052438038061052483398101604081905261002f916100f7565b6100383361008b565b600180546001600160a01b039586166001600160a01b031991821617909155600280549486169482169490941790935560038054928516928416929092179091556005805491909316911617905561014b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f257600080fd5b919050565b6000806000806080858703121561010d57600080fd5b610116856100db565b9350610124602086016100db565b9250610132604086016100db565b9150610140606086016100db565b905092959194509250565b6103ca8061015a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ce9f8be51161005b578063ce9f8be51461011e578063d7484db21461013e578063ef9b86f81461015e578063f2fde38b1461017e57600080fd5b806311a7aaaa1461008d578063678aa9de146100d6578063715018a6146100f65780638da5cb5b14610100575b600080fd5b6002546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6001546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b6100fe610191565b005b60005473ffffffffffffffffffffffffffffffffffffffff166100ad565b6004546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b6003546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b6005546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b6100fe61018c366004610357565b6101a5565b610199610261565b6101a360006102e2565b565b6101ad610261565b73ffffffffffffffffffffffffffffffffffffffff8116610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61025e816102e2565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024c565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561036957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461038d57600080fd5b939250505056fea2646970667358221220b3f400a8a722f55a0587109dcc43e395de43e0eb75b14c19f3d082df131d8ed364736f6c63430008130033";

type OracleSwapRewardsManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleSwapRewardsManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleSwapRewardsManager__factory extends ContractFactory {
  constructor(...args: OracleSwapRewardsManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wnat: string,
    _ftsoManager: string,
    _ftsoRewardManager: string,
    _flareContractRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<OracleSwapRewardsManager> {
    return super.deploy(
      _wnat,
      _ftsoManager,
      _ftsoRewardManager,
      _flareContractRegistry,
      overrides || {}
    ) as Promise<OracleSwapRewardsManager>;
  }
  override getDeployTransaction(
    _wnat: string,
    _ftsoManager: string,
    _ftsoRewardManager: string,
    _flareContractRegistry: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wnat,
      _ftsoManager,
      _ftsoRewardManager,
      _flareContractRegistry,
      overrides || {}
    );
  }
  override attach(address: string): OracleSwapRewardsManager {
    return super.attach(address) as OracleSwapRewardsManager;
  }
  override connect(signer: Signer): OracleSwapRewardsManager__factory {
    return super.connect(signer) as OracleSwapRewardsManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleSwapRewardsManagerInterface {
    return new utils.Interface(_abi) as OracleSwapRewardsManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleSwapRewardsManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OracleSwapRewardsManager;
  }
}
