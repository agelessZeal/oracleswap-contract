/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IOracleSwapRewardsManager,
  IOracleSwapRewardsManagerInterface,
} from "../../../contracts/interfaces/IOracleSwapRewardsManager";

const _abi = [
  {
    inputs: [],
    name: "flareContractRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ftsoManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ftsoProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ftsoRewardManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wnat",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOracleSwapRewardsManager__factory {
  static readonly abi = _abi;
  static createInterface(): IOracleSwapRewardsManagerInterface {
    return new utils.Interface(_abi) as IOracleSwapRewardsManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOracleSwapRewardsManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IOracleSwapRewardsManager;
  }
}
