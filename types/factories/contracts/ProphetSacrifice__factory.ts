/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProphetSacrifice,
  ProphetSacrificeInterface,
} from "../../contracts/ProphetSacrifice";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wsgb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_prophet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BurnPro",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProToStake",
    type: "event",
  },
  {
    inputs: [],
    name: "burnPro",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deadAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IOracleSwapFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prophet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prophetStaker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prophetStakerSetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setProPercetange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proStaker",
        type: "address",
      },
    ],
    name: "setProphetStaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newSetter",
        type: "address",
      },
    ],
    name: "setProphetStakerSetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurnPro",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakePro",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wsgb",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040526014600455600060055560006006553480156200002157600080fd5b5060405162001991380380620019918339810160408190526200004491620000d5565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b0393841660805291831660a052821660e0521660c052600380546001600160a01b0319163317905562000132565b80516001600160a01b0381168114620000d057600080fd5b919050565b60008060008060808587031215620000ec57600080fd5b620000f785620000b8565b93506200010760208601620000b8565b92506200011760408601620000b8565b91506200012760608601620000b8565b905092959194509250565b60805160a05160c05160e0516117df620001b26000396000818161017101528181610a100152610a3f01526000818161027701528181610a6001528181610b1301528181610ba70152610c34015260008181610201015281816108620152818161096001526109ef01526000818161029e0152610cfa01526117df6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806392468d46116100b2578063c45a015511610081578063d1bfb91811610066578063d1bfb918146102c9578063e30c3978146102e9578063e9f8b7df1461030957600080fd5b8063c45a015514610299578063cc979453146102c057600080fd5b806392468d461461024357806392ea9d2e14610256578063afcbf78914610269578063b511f09d1461027257600080fd5b80632a2952ed116101095780634e71e0c8116100ee5780634e71e0c8146101f45780637dc0d1d0146101fc5780638da5cb5b1461022357600080fd5b80632a2952ed146101c15780633603eda9146101e157600080fd5b8063078dfbe71461013b5780630a9f536714610150578063230d97181461016c57806327c8f835146101b8575b600080fd5b61014e6101493660046114dd565b610311565b005b61015960055481565b6040519081526020015b60405180910390f35b6101937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610163565b61019361dead81565b6002546101939073ffffffffffffffffffffffffffffffffffffffff1681565b61014e6101ef366004611528565b6104c3565b61014e610571565b6101937f000000000000000000000000000000000000000000000000000000000000000081565b6000546101939073ffffffffffffffffffffffffffffffffffffffff1681565b61014e610251366004611528565b61066d565b61014e61026436600461154c565b61071b565b61015960065481565b6101937f000000000000000000000000000000000000000000000000000000000000000081565b6101937f000000000000000000000000000000000000000000000000000000000000000081565b61015960045481565b6003546101939073ffffffffffffffffffffffffffffffffffffffff1681565b6001546101939073ffffffffffffffffffffffffffffffffffffffff1681565b61014e6107e2565b60005473ffffffffffffffffffffffffffffffffffffffff16331461037d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b811561047d5773ffffffffffffffffffffffffffffffffffffffff83161515806103a45750805b6103f05760405162461bcd60e51b815260206004820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152606401610374565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555b505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331461052a5760405162461bcd60e51b815260206004820152601b60248201527f50726f706865745361637269666963653a20464f5242494444454e00000000006044820152606401610374565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff163381146105d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152606401610374565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b60035473ffffffffffffffffffffffffffffffffffffffff1633146106d45760405162461bcd60e51b815260206004820152601b60248201527f50726f706865745361637269666963653a20464f5242494444454e00000000006044820152606401610374565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610374565b60648111158015610791575060015b6107dd5760405162461bcd60e51b815260206004820152600d60248201527f57726f6e672070657263656e74000000000000000000000000000000000000006044820152606401610374565b600455565b3332146108315760405162461bcd60e51b815260206004820152601e60248201527f50726f706865745361637269666963653a206d7573742075736520454f4100006044820152606401610374565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156108be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e29190611565565b1161092f5760405162461bcd60e51b815260206004820152601260248201527f73686f756c6420686f6c64206f7261636c6500000000000000000000000000006044820152606401610374565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e09190611565565b90508015610ca5576000610a367f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008430610ca8565b90506000610a867f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008430610ca8565b90506000610aa06063610a9a846064611131565b90611146565b60025490915073ffffffffffffffffffffffffffffffffffffffff1615801590610acb575060045415155b15610c1a576000610af26064610aec6004548561114690919063ffffffff16565b90611131565b600254909150610b3c9073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683611152565b6040518181527f4059a7b85e464d7f92845d01b56b4d2e15743fcef9b2f2e7423edd8793bbc1cb9060200160405180910390a1600654610b7c90826111df565b6006556000610b8b83836111eb565b9050610bd073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001661dead83611152565b600554610bdd90826111df565b6005556040518181527f576f11abc6650ba66449eb6e7351b1856d0f226f129bba6622f5626569da7f8a9060200160405180910390a15050610ca1565b610c5d73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001661dead83611152565b6040518181527f576f11abc6650ba66449eb6e7351b1856d0f226f129bba6622f5626569da7f8a9060200160405180910390a1600554610c9d90826111df565b6005555b5050505b50565b6040517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152848116602483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015610d41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d65919061157e565b905073ffffffffffffffffffffffffffffffffffffffff8116610dca5760405162461bcd60e51b815260206004820181905260248201527f50726f706865745361637269666963653a2043616e6e6f7420636f6e766572746044820152606401610374565b6000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3c91906115be565b506dffffffffffffffffffffffffffff91821693501690506000610e62876103e5611146565b90508373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed3919061157e565b73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff160361102157610f1b81610f15856103e8611146565b906111df565b610f258284611146565b610f2f9190611632565b9450610f5273ffffffffffffffffffffffffffffffffffffffff8a168589611152565b60408051600080825260208201928390527f022c0d9f0000000000000000000000000000000000000000000000000000000090925273ffffffffffffffffffffffffffffffffffffffff86169163022c0d9f91610fb7919089908b90602481016116db565b600060405180830381600087803b158015610fd157600080fd5b505af1925050508015610fe2575060015b61101c573d808015611010576040519150601f19603f3d011682016040523d82523d6000602084013e611015565b606091505b5050611125565b611125565b61103181610f15846103e8611146565b61103b8285611146565b6110459190611632565b945061106873ffffffffffffffffffffffffffffffffffffffff8a168589611152565b60408051600080825260208201928390527f022c0d9f0000000000000000000000000000000000000000000000000000000090925273ffffffffffffffffffffffffffffffffffffffff86169163022c0d9f916110cc9189918b90602481016116db565b600060405180830381600087803b1580156110e657600080fd5b505af19250505080156110f7575060015b611125573d808015611010576040519150601f19603f3d011682016040523d82523d6000602084013e611015565b50505050949350505050565b600061113d8284611632565b90505b92915050565b600061113d8284611720565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526104be9084906111f7565b600061113d8284611737565b600061113d828461174a565b6000611259826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112ec9092919063ffffffff16565b905080516000148061127a57508080602001905181019061127a919061175d565b6104be5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610374565b60606112fb8484600085611303565b949350505050565b60608247101561137b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610374565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516113a4919061177a565b60006040518083038185875af1925050503d80600081146113e1576040519150601f19603f3d011682016040523d82523d6000602084013e6113e6565b606091505b50915091506113f787838387611402565b979650505050505050565b6060831561147e5782516000036114775773ffffffffffffffffffffffffffffffffffffffff85163b6114775760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610374565b50816112fb565b6112fb83838151156114935781518083602001fd5b8060405162461bcd60e51b81526004016103749190611796565b73ffffffffffffffffffffffffffffffffffffffff81168114610ca557600080fd5b8015158114610ca557600080fd5b6000806000606084860312156114f257600080fd5b83356114fd816114ad565b9250602084013561150d816114cf565b9150604084013561151d816114cf565b809150509250925092565b60006020828403121561153a57600080fd5b8135611545816114ad565b9392505050565b60006020828403121561155e57600080fd5b5035919050565b60006020828403121561157757600080fd5b5051919050565b60006020828403121561159057600080fd5b8151611545816114ad565b80516dffffffffffffffffffffffffffff811681146115b957600080fd5b919050565b6000806000606084860312156115d357600080fd5b6115dc8461159b565b92506115ea6020850161159b565b9150604084015163ffffffff8116811461151d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082611668577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60005b83811015611688578181015183820152602001611670565b50506000910152565b600081518084526116a981602086016020860161166d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b84815283602082015273ffffffffffffffffffffffffffffffffffffffff831660408201526080606082015260006117166080830184611691565b9695505050505050565b808202811582820484141761114057611140611603565b8082018082111561114057611140611603565b8181038181111561114057611140611603565b60006020828403121561176f57600080fd5b8151611545816114cf565b6000825161178c81846020870161166d565b9190910192915050565b60208152600061113d602083018461169156fea26469706673582212208463163c8ed3173a39fa3cf6e35c00ea0ff57c67029065675d9c3ef18537196e64736f6c63430008130033";

type ProphetSacrificeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProphetSacrificeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProphetSacrifice__factory extends ContractFactory {
  constructor(...args: ProphetSacrificeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: string,
    _oracle: string,
    _wsgb: string,
    _prophet: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ProphetSacrifice> {
    return super.deploy(
      _factory,
      _oracle,
      _wsgb,
      _prophet,
      overrides || {}
    ) as Promise<ProphetSacrifice>;
  }
  override getDeployTransaction(
    _factory: string,
    _oracle: string,
    _wsgb: string,
    _prophet: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _oracle,
      _wsgb,
      _prophet,
      overrides || {}
    );
  }
  override attach(address: string): ProphetSacrifice {
    return super.attach(address) as ProphetSacrifice;
  }
  override connect(signer: Signer): ProphetSacrifice__factory {
    return super.connect(signer) as ProphetSacrifice__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProphetSacrificeInterface {
    return new utils.Interface(_abi) as ProphetSacrificeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProphetSacrifice {
    return new Contract(address, _abi, signerOrProvider) as ProphetSacrifice;
  }
}
